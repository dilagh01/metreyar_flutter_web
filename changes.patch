diff --git a/lib/screens/home_screen.dart b/lib/screens/home_screen.dart
new file mode 100644
index 0000000..aaaaaaa
--- /dev/null
+++ b/lib/screens/home_screen.dart
@@ -0,0 +1,60 @@
+import 'package:flutter/material.dart';
+
+class HomeScreen extends StatelessWidget {
+  const HomeScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Text('صفحه اصلی', style: Theme.of(context).textTheme.headlineMedium),
+        const SizedBox(height: 12),
+        const Text('خوش آمدید! اینجا داشبورد خلاصه پروژه‌ها و گزارش‌ها را می‌بینید.'),
+        const SizedBox(height: 24),
+        Wrap(
+          spacing: 12,
+          runSpacing: 12,
+          children: List.generate(4, (i) {
+            return SizedBox(
+              width: 260,
+              child: Card(
+                child: Padding(
+                  padding: const EdgeInsets.all(16.0),
+                  child: Column(
+                    crossAxisAlignment: CrossAxisAlignment.start,
+                    children: [
+                      Text('کارت ${i + 1}', style: Theme.of(context).textTheme.titleMedium),
+                      const SizedBox(height: 8),
+                      const Text('نمایش خلاصه‌ای از شاخص‌ها و اطلاعات مهم پروژه.'),
+                    ],
+                  ),
+                ),
+              ),
+            );
+          }),
+        ),
+      ],
+    );
+  }
+}
diff --git a/lib/screens/dashboard_screen.dart b/lib/screens/dashboard_screen.dart
new file mode 100644
index 0000000..bbbbbbb
--- /dev/null
+++ b/lib/screens/dashboard_screen.dart
@@ -0,0 +1,164 @@
+import 'package:flutter/material.dart';
+import 'package:fl_chart/fl_chart.dart';
+import 'package:intl/intl.dart';
+
+class DashboardScreen extends StatelessWidget {
+  const DashboardScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    final currency = NumberFormat.decimalPattern('fa');
+    final cards = [
+      _Kpi('پروژه‌های فعال', '8'),
+      _Kpi('هزینه کل (تومان)', currency.format(185000000)),
+      _Kpi('میانگین پیشرفت', '64%'),
+      _Kpi('وظایف امروز', '12'),
+    ];
+
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Wrap(
+          spacing: 12,
+          runSpacing: 12,
+          children: cards.map((k) => _KpiCard(k)).toList(),
+        ),
+        const SizedBox(height: 24),
+        Card(
+          child: Padding(
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Text('روند هزینه ماهانه', style: Theme.of(context).textTheme.titleMedium),
+                const SizedBox(height: 16),
+                SizedBox(
+                  height: 260,
+                  child: LineChart(
+                    LineChartData(
+                      gridData: const FlGridData(show: true),
+                      titlesData: FlTitlesData(
+                        bottomTitles: AxisTitles(sideTitles: SideTitles(showTitles: true, getTitlesWidget: (v, m) {
+                          const labels = ['ف', 'ا', 'ا', 'ت', 'خ', 'م', 'آ', 'آ', 'آ', 'د', 'ب', 'ا'];
+                          final index = v.toInt();
+                          return index >= 0 && index < labels.length ? Text(labels[index]) : const SizedBox();
+                        })),
+                        leftTitles: const AxisTitles(sideTitles: SideTitles(showTitles: true, reservedSize: 40)),
+                        rightTitles: const AxisTitles(sideTitles: SideTitles(showTitles: false)),
+                        topTitles: const AxisTitles(sideTitles: SideTitles(showTitles: false)),
+                      ),
+                      lineBarsData: [
+                        LineChartBarData(
+                          isCurved: true,
+                          barWidth: 3,
+                          spots: const [
+                            FlSpot(0, 10),
+                            FlSpot(1, 14),
+                            FlSpot(2, 12),
+                            FlSpot(3, 18),
+                            FlSpot(4, 13),
+                            FlSpot(5, 22),
+                            FlSpot(6, 19),
+                            FlSpot(7, 24),
+                            FlSpot(8, 20),
+                            FlSpot(9, 27),
+                            FlSpot(10, 26),
+                            FlSpot(11, 30),
+                          ],
+                        ),
+                      ],
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ),
+      ],
+    );
+  }
+}
+
+class _Kpi {
+  final String title;
+  final String value;
+  _Kpi(this.title, this.value);
+}
+
+class _KpiCard extends StatelessWidget {
+  final _Kpi kpi;
+  const _KpiCard(this.kpi);
+  @override
+  Widget build(BuildContext context) {
+    return SizedBox(
+      width: 280,
+      child: Card(
+        child: Padding(
+          padding: const EdgeInsets.all(16.0),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              Text(kpi.title, style: Theme.of(context).textTheme.labelLarge),
+              const SizedBox(height: 8),
+              Text(kpi.value, style: Theme.of(context).textTheme.headlineSmall),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/screens/projects_screen.dart b/lib/screens/projects_screen.dart
new file mode 100644
index 0000000..ccccccc
--- /dev/null
+++ b/lib/screens/projects_screen.dart
@@ -0,0 +1,196 @@
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+
+class ProjectsScreen extends StatefulWidget {
+  const ProjectsScreen({super.key});
+  @override
+  State<ProjectsScreen> createState() => _ProjectsScreenState();
+}
+
+class _ProjectsScreenState extends State<ProjectsScreen> {
+  final _controller = TextEditingController();
+  int? _sortColumnIndex;
+  bool _ascending = true;
+
+  final _currency = NumberFormat.decimalPattern('fa');
+
+  final List<Map<String, dynamic>> _rows = [
+    {"name": "برج A", "status": "درحال اجرا", "progress": 62, "cost": 120000000, "start": DateTime(2025, 3, 1)},
+    {"name": "مجتمع B", "status": "برنامه‌ریزی", "progress": 15, "cost": 32000000, "start": DateTime(2025, 5, 10)},
+    {"name": "سوله C", "status": "تکمیل", "progress": 100, "cost": 78000000, "start": DateTime(2024, 12, 1)},
+  ];
+
+  List<Map<String, dynamic>> get _filtered {
+    final q = _controller.text.trim();
+    if (q.isEmpty) return _rows;
+    return _rows.where((e) => e["name"].toString().contains(q) || e["status"].toString().contains(q)).toList();
+  }
+
+  void _sort<T>(Comparable<T> Function(Map<String, dynamic> row) getField, int columnIndex, bool ascending) {
+    _filtered.sort((a, b) {
+      final aVal = getField(a);
+      final bVal = getField(b);
+      return ascending ? Comparable.compare(aVal, bVal) : Comparable.compare(bVal, aVal);
+    });
+    setState(() {
+      _sortColumnIndex = columnIndex;
+      _ascending = ascending;
+    });
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Row(
+          children: [
+            Expanded(
+              child: TextField(
+                controller: _controller,
+                decoration: const InputDecoration(
+                  prefixIcon: Icon(Icons.search),
+                  hintText: 'جست‌وجو در پروژه‌ها…',
+                  border: OutlineInputBorder(),
+                ),
+                onChanged: (_) => setState(() {}),
+              ),
+            ),
+            const SizedBox(width: 12),
+            FilledButton.icon(
+              onPressed: () {
+                setState(() {
+                  _rows.add({
+                    "name": "پروژه جدید ${_rows.length + 1}",
+                    "status": "برنامه‌ریزی",
+                    "progress": 0,
+                    "cost": 0,
+                    "start": DateTime.now(),
+                  });
+                });
+              },
+              icon: const Icon(Icons.add),
+              label: const Text('افزودن پروژه'),
+            ),
+          ],
+        ),
+        const SizedBox(height: 16),
+        SingleChildScrollView(
+          scrollDirection: Axis.horizontal,
+          child: DataTable(
+            sortColumnIndex: _sortColumnIndex,
+            sortAscending: _ascending,
+            columns: [
+              DataColumn(
+                label: const Text('نام'),
+                onSort: (ci, asc) => _sort((r) => r["name"] as String, ci, asc),
+              ),
+              DataColumn(
+                label: const Text('وضعیت'),
+                onSort: (ci, asc) => _sort((r) => r["status"] as String, ci, asc),
+              ),
+              DataColumn(
+                label: const Text('پیشرفت (%)'),
+                numeric: true,
+                onSort: (ci, asc) => _sort((r) => r["progress"] as int, ci, asc),
+              ),
+              DataColumn(
+                label: const Text('هزینه (تومان)'),
+                numeric: true,
+                onSort: (ci, asc) => _sort((r) => r["cost"] as int, ci, asc),
+              ),
+              const DataColumn(label: Text('تاریخ شروع')),
+              const DataColumn(label: Text('عملیات')),
+            ],
+            rows: _filtered.map((p) {
+              return DataRow(
+                cells: [
+                  DataCell(Text(p["name"])),
+                  DataCell(Text(p["status"])),
+                  DataCell(Text('${p["progress"]}%')),
+                  DataCell(Text(_currency.format(p["cost"]))),
+                  DataCell(Text(DateFormat('yyyy/MM/dd').format(p["start"]))),
+                  DataCell(Row(
+                    children: [
+                      IconButton(onPressed: () {}, icon: const Icon(Icons.visibility)),
+                      IconButton(onPressed: () {}, icon: const Icon(Icons.edit)),
+                      IconButton(
+                        onPressed: () => setState(() => _rows.remove(p)),
+                        icon: const Icon(Icons.delete_outline),
+                      ),
+                    ],
+                  )),
+                ],
+              );
+            }).toList(),
+          ),
+        ),
+      ],
+    );
+  }
+}
diff --git a/lib/screens/metering_screen.dart b/lib/screens/metering_screen.dart
new file mode 100644
index 0000000..ddddddd
--- /dev/null
+++ b/lib/screens/metering_screen.dart
@@ -0,0 +1,173 @@
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+
+class MeteringScreen extends StatefulWidget {
+  const MeteringScreen({super.key});
+  @override
+  State<MeteringScreen> createState() => _MeteringScreenState();
+}
+
+class _MeteringScreenState extends State<MeteringScreen> {
+  final _currency = NumberFormat.decimalPattern('fa');
+  final _rows = <_MeterRow>[
+    _MeterRow(desc: 'بتن C25', unit: 'متر مکعب', qty: 12, unitPrice: 1850000),
+    _MeterRow(desc: 'میلگرد آجدار', unit: 'کیلوگرم', qty: 2500, unitPrice: 49000),
+  ];
+
+  num get total => _rows.fold<num>(0, (s, r) => s + r.amount);
+
+  void _addRow() => setState(() => _rows.add(_MeterRow()));
+  void _removeRow(int i) => setState(() => _rows.removeAt(i));
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Row(
+          children: [
+            FilledButton.icon(onPressed: _addRow, icon: const Icon(Icons.add), label: const Text('افزودن ردیف')),
+            const SizedBox(width: 12),
+            OutlinedButton.icon(
+              onPressed: _rows.isEmpty ? null : () => setState(_rows.clear),
+              icon: const Icon(Icons.clear_all),
+              label: const Text('پاک‌سازی'),
+            ),
+          ],
+        ),
+        const SizedBox(height: 12),
+        SingleChildScrollView(
+          scrollDirection: Axis.horizontal,
+          child: DataTable(
+            columnSpacing: 16,
+            columns: const [
+              DataColumn(label: Text('شرح')),
+              DataColumn(label: Text('واحد')),
+              DataColumn(label: Text('مقدار'), numeric: true),
+              DataColumn(label: Text('فی واحد (تومان)'), numeric: true),
+              DataColumn(label: Text('مبلغ (تومان)'), numeric: true),
+              DataColumn(label: Text('')),
+            ],
+            rows: [
+              for (var i = 0; i < _rows.length; i++)
+                DataRow(cells: [
+                  DataCell(_TextCell(
+                    initial: _rows[i].desc,
+                    hint: 'شرح آیتم',
+                    onChanged: (v) => setState(() => _rows[i] = _rows[i].copyWith(desc: v)),
+                  )),
+                  DataCell(_TextCell(
+                    initial: _rows[i].unit,
+                    hint: 'واحد',
+                    onChanged: (v) => setState(() => _rows[i] = _rows[i].copyWith(unit: v)),
+                  )),
+                  DataCell(_NumCell(
+                    initial: _rows[i].qty,
+                    onChanged: (v) => setState(() => _rows[i] = _rows[i].copyWith(qty: v)),
+                  )),
+                  DataCell(_NumCell(
+                    initial: _rows[i].unitPrice,
@@ -51,0 +52,122 @@
+                  DataCell(_NumCell(
+                    initial: _rows[i].unitPrice,
+                    onChanged: (v) => setState(() => _rows[i] = _rows[i].copyWith(unitPrice: v)),
+                  )),
+                  DataCell(Text(_currency.format(_rows[i].amount))),
+                  DataCell(
+                    IconButton(
+                      icon: const Icon(Icons.delete_outline),
+                      onPressed: () => _removeRow(i),
+                    ),
+                  ),
+                ]),
+            ],
+          ),
+        ),
+        const SizedBox(height: 16),
+        Text('جمع کل: ${_currency.format(total)} تومان', style: const TextStyle(fontWeight: FontWeight.bold)),
+      ],
+    );
+  }
+}
+
+class _MeterRow {
+  final String desc;
+  final String unit;
+  final num qty;
+  final num unitPrice;
+  _MeterRow({this.desc = '', this.unit = '', this.qty = 0, this.unitPrice = 0});
+  num get amount => qty * unitPrice;
+  _MeterRow copyWith({String? desc, String? unit, num? qty, num? unitPrice}) => _MeterRow(
+        desc: desc ?? this.desc,
+        unit: unit ?? this.unit,
+        qty: qty ?? this.qty,
+        unitPrice: unitPrice ?? this.unitPrice,
+      );
+}
+
+class _TextCell extends StatelessWidget {
+  final String initial;
+  final String hint;
+  final ValueChanged<String> onChanged;
+  const _TextCell({super.key, required this.initial, required this.hint, required this.onChanged});
+  @override
+  Widget build(BuildContext context) {
+    final controller = TextEditingController(text: initial);
+    return TextField(
+      controller: controller,
+      decoration: InputDecoration(hintText: hint, border: InputBorder.none),
+      onSubmitted: onChanged,
+    );
+  }
+}
+
+class _NumCell extends StatelessWidget {
+  final num initial;
+  final ValueChanged<num> onChanged;
+  const _NumCell({super.key, required this.initial, required this.onChanged});
+  @override
+  Widget build(BuildContext context) {
+    final controller = TextEditingController(text: initial.toString());
+    return TextField(
+      controller: controller,
+      keyboardType: TextInputType.number,
+      decoration: const InputDecoration(border: InputBorder.none),
+      onSubmitted: (v) {
+        final n = num.tryParse(v) ?? 0;
+        onChanged(n);
+      },
+    );
+  }
+}
+
+// ------------------------------------------------------
+// analysis_screen.dart
+import 'package:flutter/material.dart';
+
+class AnalysisScreen extends StatelessWidget {
+  const AnalysisScreen({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        const Text('تحلیل داده‌ها', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
+        const SizedBox(height: 16),
+        Card(
+          child: ListTile(
+            leading: const Icon(Icons.bar_chart),
+            title: const Text('میانگین پیشرفت پروژه‌ها'),
+            subtitle: const Text('60%'),
+          ),
+        ),
+        Card(
+          child: ListTile(
+            leading: const Icon(Icons.attach_money),
+            title: const Text('کل هزینه پروژه‌ها'),
+            subtitle: const Text('230,000,000 تومان'),
+          ),
+        ),
+        Card(
+          child: ListTile(
+            leading: const Icon(Icons.people),
+            title: const Text('تعداد پروژه‌های فعال'),
+            subtitle: const Text('3 پروژه'),
+          ),
+        ),
+      ],
+    );
+  }
+}
// ------------------------------------------------------
// contracts_screen.dart
import 'package:flutter/material.dart';

class ContractsScreen extends StatelessWidget {
  const ContractsScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final contracts = [
      {'name': 'قرارداد پروژه A', 'status': 'فعال', 'amount': 12000000},
      {'name': 'قرارداد پروژه B', 'status': 'پایان یافته', 'amount': 8500000},
    ];

    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const Text('قراردادها', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
        const SizedBox(height: 12),
        DataTable(
          columns: const [
            DataColumn(label: Text('نام قرارداد')),
            DataColumn(label: Text('وضعیت')),
            DataColumn(label: Text('مبلغ (تومان)'), numeric: true),
          ],
          rows: contracts
              .map((c) => DataRow(cells: [
                    DataCell(Text(c['name']!)),
                    DataCell(Text(c['status']!)),
                    DataCell(Text(c['amount']!.toString())),
                  ]))
              .toList(),
        ),
      ],
    );
  }
}

// ------------------------------------------------------
// settings_screen.dart
import 'package:flutter/material.dart';

class SettingsScreen extends StatelessWidget {
  const SettingsScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ListView(
      children: [
        SwitchListTile(
          value: Theme.of(context).brightness == Brightness.dark,
          onChanged: (v) {},
          title: const Text('تم تیره'),
        ),
        const ListTile(title: Text('زبان'), subtitle: Text('فارسی')),
      ],
    );
  }
}

// ------------------------------------------------------
// workflow_screen.dart
import 'package:flutter/material.dart';

class WorkflowScreen extends StatelessWidget {
  const WorkflowScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final tasks = [
      {'task': 'طراحی فاز 1', 'due': '1404/12/10', 'progress': '50%'},
      {'task': 'اجرا فاز 2', 'due': '1405/01/20', 'progress': '20%'},
    ];

    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const Text('گردش‌کار پروژه', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
        const SizedBox(height: 12),
        DataTable(
          columns: const [
            DataColumn(label: Text('وظیفه')),
            DataColumn(label: Text('تاریخ سررسید')),
            DataColumn(label: Text('پیشرفت')),
          ],
          rows: tasks
              .map((t) => DataRow(cells: [
                    DataCell(Text(t['task']!)),
                    DataCell(Text(t['due']!)),
                    DataCell(Text(t['progress']!)),
                  ]))
              .toList(),
        ),
      ],
    );
  }
}

// ------------------------------------------------------
// dashboard_screen.dart
import 'package:flutter/material.dart';

class DashboardScreen extends StatelessWidget {
  const DashboardScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final stats = [
      {'label': 'پروژه‌های فعال', 'value': '3'},
      {'label': 'میانگین پیشرفت', 'value': '60%'},
      {'label': 'وظایف امروز', 'value': '5'},
      {'label': 'کل هزینه', 'value': '230,000,000'},
    ];

    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const Text('داشبورد', style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold)),
        const SizedBox(height: 12),
        Wrap(
          spacing: 12,
          runSpacing: 12,
          children: stats
              .map((s) => Card(
                    child: SizedBox(
                      width: 160,
                      height: 100,
                      child: Center(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(s['label']!, style: const TextStyle(fontWeight: FontWeight.bold)),
                            const SizedBox(height: 8),
                            Text(s['value']!, style: const TextStyle(fontSize: 18)),
                          ],
                        ),
                      ),
                    ),
                  ))
              .toList(),
        ),
      ],
    );
  }
}

// ------------------------------------------------------
// price_list_screen.dart
import 'package:flutter/material.dart';

class PriceListScreen extends StatelessWidget {
  const PriceListScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final items = [
      {'code': '010101', 'desc': 'خاکبرداری دستی', 'unit': 'م3', 'price': 120000},
      {'code': '010102', 'desc': 'حمل نخاله', 'unit': 'تن', 'price': 85000},
      {'code': '020201', 'desc': 'بتن‌ریزی فونداسیون', 'unit': 'م3', 'price': 1950000},
    ];

    return SingleChildScrollView(
      scrollDirection: Axis.horizontal,
      child: DataTable(
        columns: const [
          DataColumn(label: Text('کد')),
          DataColumn(label: Text('شرح')),
          DataColumn(label: Text('واحد')),
          DataColumn(label: Text('فی واحد (تومان)'), numeric: true),
        ],
        rows: items
            .map((i) => DataRow(cells: [
                  DataCell(Text(i['code']!)),
                  DataCell(Text(i['desc']!)),
                  DataCell(Text(i['unit']!)),
                  DataCell(Text(i['price']!.toString())),
                ]))
            .toList(),
      ),
    );
  }
}

// ------------------------------------------------------
// report_screen.dart
import 'package:flutter/material.dart';

class ReportScreen extends StatelessWidget {
  const ReportScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: const [
        Text('گزارش‌ها', style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
        SizedBox(height: 12),
        Text('تولید خروجی PDF/Excel (در گام بعدی اضافه می‌شود).'),
      ],
    );
  }
}

// ------------------------------------------------------
// features_screen.dart
import 'package:flutter/material.dart';

class FeaturesScreen extends StatelessWidget {
  const FeaturesScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final features = [
      {'icon': Icons.table_chart, 'label': 'جداول پویا'},
      {'icon': Icons.calculate, 'label': 'فرمول‌های سفارشی'},
      {'icon': Icons.show_chart, 'label': 'نمودارهای تحلیلی'},
      {'icon': Icons.picture_as_pdf, 'label': 'گزارش‌گیری PDF/Excel'},
    ];

    return ListView(
      children: features
          .map((f) => ListTile(
                leading: Icon(f['icon'] as IconData),
                title: Text(f['label']!),
              ))
          .toList(),
    );
  }
}
